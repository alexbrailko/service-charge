name: Deploy to Server

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest # Or your preferred runner

    steps:
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - uses: actions/checkout@v4 # Checkout code from repository

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21.7.2

      - name: Install dependencies
        run: npm install # Or yarn install

      - name: Load environment variables
        run: |
          touch .env
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env  # Create temporary .env file

      - name: Build Next.js app
        run: npm run build # Or yarn build

      - name: Remove temporary.env file
        run: rm .env

      - name: SSH Deploy
        # Use the 'appleboy/ssh-action' action for SSH deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }} # Your server's IP address
          username: ${{ secrets.USERNAME }} # Your server's username
          password: ${{ secrets.PASSWORD }}
          port: 22
          command_timeout: 200m
          script: |
            cd ../var/www/service-charge
            git pull
            npm install
            npm run build
            pm2 restart nextjs
